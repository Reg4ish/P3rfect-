return function(io)
	local n, att = tonumber(io[1].t.Value), tonumber(io[1].u.Value)
	if typeof(n) ~= "number" then
		n = 0
	end
	if typeof(att) ~= "number" then
		att = 0
	end
	local hrp = io[2].Character.HumanoidRootPart
	local fz, s, at = io[1].e.Value, hrp.CFrame, 0
	io[2].Character.Humanoid.Sit = false
	io[1].e:SetValue(true)
	local function temp()
		if at == att then
			return
		else
			at+=1
		end
		local function f(v)
			local t = io[3]:FindFirstChild("Appraiser")
			if not t then
				if not v then
					hrp.CFrame = io[4]["moosewood"].CFrame	
				end
				task.wait()
				return f(true)
			end
			return t
		end
		local t = f()
		
		local hb = io[2].PlayerGui.hud.safezone.backpack.hotbar[1]
		if not hb.item.Value then
			return io[5]("No Fish Found on Hotbar [1]!")
		end
		if hb.hover.ImageColor3 ~= Color3.fromRGB(130, 211, 255) then
			io[6](hb)
		end
		local function fh()
			local fish = io[2].Character:FindFirstChildOfClass("Tool")
			if not fish then
				task.wait()
				return fh()
			end
			return fish
		end
		local fish = fh()
		if not fish:FindFirstChild("fishscript") then
			return io[5]("Invalid Fish!")
		end
		t.appraiser.appraise:InvokeServer()
		local weight, mutations = string.gsub(hb.weight.Text, "kg", ""), {}
		for _,v in pairs(io[7]) do
			if string.find(hb.itemname.Text, v) then
				table.insert(mutations, v)
				break
			end
		end
		for _,v in mutations do
			for i,_ in pairs(io[1].f.Value) do
				if i == v then
					return io[5]("Found " .. v .. "!")
				end
			end	
		end	
		if n ~= 0 then
			if tonumber(weight) > n-1 then
				return io[5]("Found " ..weight.. "kg!")
			end
		end
		task.wait()
		temp()
	end
	temp()
	mouse1click()
	hrp.CFrame = s
	if not fz then
		io[1].e:SetValue(false)
	end
end
